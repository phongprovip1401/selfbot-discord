import { readFileSync, existsSync } from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));
const CONFIG_PATH = path.join(__dirname, '../config.json');

function getPrefix() {
  if (existsSync(CONFIG_PATH)) {
    try {
      const config = JSON.parse(readFileSync(CONFIG_PATH, 'utf8'));
      return config.prefix || ';';
    } catch (err) {
      console.error('L·ªói khi ƒë·ªçc prefix t·ª´ config:', err);
      return ';';
    }
  }
  return ';';
}

export const name = 'help';
export const permission = 'everyone';

export async function execute(message, args) {
  const prefix = getPrefix();
  const helpText = `
\`\`\`
üìù Danh s√°ch l·ªánh:

1. ${prefix}help - Hi·ªÉn th·ªã danh s√°ch l·ªánh
2. ${prefix}ping - Ki·ªÉm tra ƒë·ªô tr·ªÖ
3. ${prefix}uptime - Xem th·ªùi gian ho·∫°t ƒë·ªông
4. ${prefix}avatar - Xem avatar c·ªßa b·∫°n
5. ${prefix}serverinfo - Xem th√¥ng tin server
6. ${prefix}status - Qu·∫£n l√Ω tr·∫°ng th√°i
7. ${prefix}typing - B·∫≠t/t·∫Øt ch·∫ø ƒë·ªô ƒëang g√µ
8. ${prefix}purge <s·ªë> - X√≥a tin nh·∫Øn
9. ${prefix}spam <s·ªë> <tin nh·∫Øn> - Spam tin nh·∫Øn
10. ${prefix}say <tin nh·∫Øn> - G·ª≠i tin nh·∫Øn
11. ${prefix}phantich - Ph√¢n t√≠ch tin nh·∫Øn
12. ${prefix}qr - Qu·∫£n l√Ω QR code
13. ${prefix}join - Tham gia voice channel
14. ${prefix}afk - B·∫≠t/t·∫Øt ch·∫ø ƒë·ªô AFK

üìå Qu·∫£n l√Ω ghi ch√∫:
15. ${prefix}note <n·ªôi dung> - Th√™m ghi ch√∫ m·ªõi
16. ${prefix}notes - Xem danh s√°ch ghi ch√∫
17. ${prefix}note delete <id> - X√≥a ghi ch√∫

üí° L∆∞u √Ω: T·∫•t c·∫£ tin nh·∫Øn s·∫Ω t·ª± ƒë·ªông x√≥a sau 5 gi√¢y
\`\`\`
`;

  const reply = await message.channel.send(helpText);
  setTimeout(() => {
    message.delete().catch(() => {});
    reply.delete().catch(() => {});
  }, 30000);
} 